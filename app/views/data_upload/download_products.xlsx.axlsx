wb = xlsx_package.workbook
title = wb.styles.add_style(:b=> true, :sz=>12, :border=> {:style => :thin, :color => "00000000",:edges => [:top,:left, :right, :bottom]})

wb.add_worksheet(name: 'Cargador productos') do |sheet|
	headers = [
	'TNR',
	'B-Stock',
	'EAN',
	'Categoría',
	'Estado Equipos',
	'Descuento',
	'Centro Costo',
	'Centro de beneficios',
	'Business Unit',
	'Familia',
	'Subfamilia',
	'Específico',
	'Nombre',
	'Descripción',
	'Costo',
	'Precio',
	'Precio EUR',
	'Mandatorio',
	'Canal',
	'Retirable',
	'Despachable',
	'Tipo',
	'Built-in',
	'Instalación',
	'Outlet',
	'Características',
	'Especificaciones',
	'Especificaciones técnicas',
	'Funciones',
	'Especialidades de bebidas',
	'Diseño de los cestos',
	'Programa de lavado',
	'Programa de secado',
	'Cuidado y mantenimiento',
	'Eficiencia y sostenibilidad',
	'Accesorios y suministros',
	'Seguridad'
	]
	sheet.add_row headers, style: title
	
	@products.each do |prod|
		sheet.add_row [
			prod.sku,
			(prod.bstock ? 'si': 'no'),
			prod.try(:ean),
			prod.try(:category),
			prod.try(:state),
			prod.try(:discount),
			prod.try(:cost_center).try(:code),
			(prod.profit_center ? 'si': 'no'),
			prod.families.find_by(depth: 0).try(:name),
			prod.families.find_by(depth: 1).try(:name),
			prod.families.find_by(depth: 2).try(:name),
			prod.families.find_by(depth: 3).try(:name),
			prod.name,
			prod.description,
			prod.cost,
			prod.price,
			prod.price_eur,
			(prod.mandatory ? 'si': 'no'),
			prod.sale_channels.pluck(:name).join(','),
			(prod.can_retire ? 'si': 'no'),
			(prod.dispatch ? 'si': 'no'),
			prod.product_type,
			(prod.built_in ? 'si': 'no'),
			(prod.instalation ? 'si': 'no'),
			(prod.outlet ? 'si': 'no'),
			prod.features,
			prod.specs,
			prod.technical_specs,
			prod.product_functions,
			prod.drink_specialty,
			prod.basket_design,
			prod.wash_program,
			prod.dry_program,
			prod.maintenance_care,
			prod.efficiency_sustain,
			prod.accessories,
			prod.security], 
			types: [:string, 
				:string,
				:string, 
				:string, 
				:string, 
				:integer, 
				:integer, 
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:integer,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,
				:string,]
		end
	end